{"version":3,"sources":["component/GoodsList.tsx","App.tsx","index.tsx"],"names":["Goodlist","React","memo","goods","map","good","goodsFromServer","App","state","isVisible","show","setState","revers","reverse","reset","sortByAlphabet","sort","a","b","localeCompare","sortByLength","length","this","className","type","onClick","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAMaA,EAA4BC,IAAMC,MAAK,YAAgB,IAAbC,EAAY,EAAZA,MACrD,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACGA,GADMA,WCLXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOmBC,E,4MACnBC,MAAe,CACbL,MAAM,GAAD,OAAMG,GACXG,WAAW,G,EAGbC,KAAO,WACL,EAAKC,UAAS,SAACH,GAAD,MAAY,CAAEC,WAAYD,EAAMC,e,EAGhDG,OAAS,WACP,EAAKD,UAAS,SAACH,GAAD,MAAY,CACxBL,MAAM,YAAKK,EAAML,MAAMU,gB,EAI3BC,MAAQ,WACN,EAAKH,SAAS,CAAER,MAAM,GAAD,OAAMG,M,EAG7BS,eAAiB,WACf,EAAKJ,UAAS,SAACH,GAAD,MAAY,CACxBL,MAAM,YAAKK,EAAML,MAAMa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,Y,EAI1DE,aAAe,WACb,EAAKT,UAAS,SAACH,GAAD,MAAY,CACxBL,MAAM,YAAKK,EAAML,MAAMa,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,gB,4CAIvD,WACE,MAA6BC,KAAKd,MAA1BC,EAAR,EAAQA,UAAWN,EAAnB,EAAmBA,MAEnB,OACE,sBAAKoB,UAAU,MAAf,UACE,uCACA,wBACEC,KAAK,SACLC,QAASH,KAAKZ,KAFhB,mBAMA,wBACEc,KAAK,SACLC,QAASH,KAAKV,OAFhB,qBAMA,wBACEY,KAAK,SACLC,QAASH,KAAKP,eAFhB,8BAMA,wBACES,KAAK,SACLC,QAASH,KAAKR,MAFhB,mBAMA,wBACEU,KAAK,SACLC,QAASH,KAAKF,aAFhB,4BAMCX,GAAa,cAACT,EAAD,CAAUG,MAAOA,W,GApENF,IAAMyB,eCnBvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.571690be.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const Goodlist: React.FC<Props> = React.memo(({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n});\n","// import classNames from 'classnames';\nimport React from 'react';\nimport './App.css';\nimport { Goodlist } from './component/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[];\n  isVisible: boolean,\n}\nexport default class App extends React.PureComponent<{}, State> {\n  state: State = {\n    goods: [...goodsFromServer],\n    isVisible: false,\n  };\n\n  show = () => {\n    this.setState((state) => ({ isVisible: !state.isVisible }));\n  };\n\n  revers = () => {\n    this.setState((state) => ({\n      goods: [...state.goods.reverse()],\n    }));\n  };\n\n  reset = () => {\n    this.setState({ goods: [...goodsFromServer] });\n  };\n\n  sortByAlphabet = () => {\n    this.setState((state) => ({\n      goods: [...state.goods.sort((a, b) => a.localeCompare(b))],\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState((state) => ({\n      goods: [...state.goods.sort((a, b) => a.length - b.length)],\n    }));\n  };\n\n  render() {\n    const { isVisible, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <button\n          type=\"button\"\n          onClick={this.show}\n        >\n          Start\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.revers}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByAlphabet}\n        >\n          Sort by alphabet\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n        {isVisible && <Goodlist goods={goods} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}